{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","constructor","connection","_connection","_store","adiciona","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","e","onerror","console","error","target","listaTodos","negociacoes","cursor","openCursor","atual","result","value","_data","_quantidade","_valor","push","continue","log","apagaTodos","clear"],"mappings":";;;;;;AAASA,sB,iBAAAA,U;;;AAEF,kBAAMC,aAAN,CAAoB;;AAEvBC,4BAAYC,UAAZ,EAAuB;AACnB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACH;;AAEDC,yBAASC,UAAT,EAAoB;AAChB,2BAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,8BAAMC,UAAU,KAAKP,WAAL,CACXQ,WADW,CACC,CAAC,KAAKP,MAAN,CADD,EACgB,WADhB,EAEXQ,WAFW,CAEC,KAAKR,MAFN,EAGXS,GAHW,CAGPP,UAHO,CAAhB;;AAKAI,gCAAQI,SAAR,GAAoBC,KAAKP,SAAzB;AACAE,gCAAQM,OAAR,GAAkBD,KAAK;AACnBE,oCAAQC,KAAR,CAAcH,EAAEI,MAAF,CAASD,KAAvB;AACAT,mCAAO,uCAAP;AACH,yBAHD;AAIH,qBAXM,CAAP;AAYH;;AAEDW,6BAAY;AACR,2BAAO,IAAIb,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,8BAAMY,cAAc,EAApB;;AAEA,8BAAMC,SAAS,KAAKnB,WAAL,CACVQ,WADU,CACE,CAAC,KAAKP,MAAN,CADF,EACgB,WADhB,EAEVQ,WAFU,CAEE,KAAKR,MAFP,EAGVmB,UAHU,EAAf;;AAKAD,+BAAOR,SAAP,GAAmBC,KAAK;AACpB,kCAAMS,QAAQT,EAAEI,MAAF,CAASM,MAAvB;;AAEA,gCAAGD,KAAH,EAAS;AACL,sCAAMlB,aAAa,IAAIP,UAAJ,CACfyB,MAAME,KAAN,CAAYC,KADG,EAEfH,MAAME,KAAN,CAAYE,WAFG,EAGfJ,MAAME,KAAN,CAAYG,MAHG,CAAnB;;AAMAR,4CAAYS,IAAZ,CAAiBxB,UAAjB;AACAkB,sCAAMO,QAAN;AACH,6BATD,MASO;AACH;AACAvB,wCAAQa,WAAR;AACH;AAEJ,yBAjBD;;AAmBAC,+BAAON,OAAP,GAAiBD,KAAK;AAClBE,oCAAQe,GAAR,CAAYjB,EAAEI,MAAF,CAASD,KAArB;AACAT,mCAAO,yCAAP;AACH,yBAHD;AAKH,qBAhCM,CAAP;AAiCH;;AAEDwB,6BAAY;AACR,2BAAO,IAAI1B,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,8BAAMC,UAAU,KAAKP,WAAL,CACXQ,WADW,CACC,CAAC,KAAKP,MAAN,CADD,EACgB,WADhB,EAEXQ,WAFW,CAEC,KAAKR,MAFN,EAGX8B,KAHW,EAAhB;;AAKAxB,gCAAQI,SAAR,GAAoBC,KAAKP,SAAzB;;AAEAE,gCAAQM,OAAR,GAAkBD,KAAK;AACnBE,oCAAQe,GAAR,CAAYjB,EAAEI,MAAF,CAASD,KAArB;AACAT,mCAAO,yCAAP;AACH,yBAHD;AAIH,qBAZM,CAAP;AAaH;;AAxEsB","file":"NegociacaoDao.js","sourcesContent":["import { Negociacao } from \"./Negociacao.js\";\r\n\r\nexport class NegociacaoDao {\r\n\r\n    constructor(connection){\r\n        this._connection = connection\r\n        this._store = 'negociacoes'\r\n    }\r\n\r\n    adiciona(negociacao){\r\n        return new Promise((resolve, reject) => {\r\n            const request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .add(negociacao)\r\n            \r\n            request.onsuccess = e => resolve()\r\n            request.onerror = e => {\r\n                console.error(e.target.error)\r\n                reject('Não foi possível salvar a negociação!')\r\n            }\r\n        })\r\n    }\r\n\r\n    listaTodos(){\r\n        return new Promise((resolve, reject) => {\r\n            const negociacoes = []\r\n\r\n            const cursor = this._connection\r\n                .transaction([this._store],'readwrite')\r\n                .objectStore(this._store)\r\n                .openCursor()\r\n            \r\n            cursor.onsuccess = e => {\r\n                const atual = e.target.result;\r\n                \r\n                if(atual){\r\n                    const negociacao = new Negociacao(\r\n                        atual.value._data,\r\n                        atual.value._quantidade,\r\n                        atual.value._valor\r\n                    )\r\n                \r\n                    negociacoes.push(negociacao)\r\n                    atual.continue()\r\n                } else {\r\n                    //resolvendo a promise com negociacoes\r\n                    resolve(negociacoes)\r\n                }\r\n\r\n            }\r\n\r\n            cursor.onerror = e => {\r\n                console.log(e.target.error)\r\n                reject('Não foi possível listar as negociações!')\r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    apagaTodos(){\r\n        return new Promise((resolve, reject) => {\r\n            const request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .clear()\r\n            \r\n            request.onsuccess = e => resolve()\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error)\r\n                reject('Não foi possível apagar as negociações!')\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n}"]}