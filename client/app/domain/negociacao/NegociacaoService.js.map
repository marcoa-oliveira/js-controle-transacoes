{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","NegociacaoService","constructor","_http","obtemNegociacaoDaSemana","get","then","dados","map","objeto","Date","data","quantidade","valor","err","Error","obtemNegociacoesDaSemanaAnterior","obtemNegociacoesDaSemanaRetrasada","obtemNegociacoesDoPeriodo","Promise","all","periodo","reduce","novoArray","item","concat","sort","a","b","getTime","catch","console","log"],"mappings":";;;;;;AAASA,uB,sBAAAA,W;;AACAC,sB,iBAAAA,U;;;AAEF,kBAAMC,iBAAN,CAAwB;;AAE3BC,8BAAa;AACT,yBAAKC,KAAL,GAAa,IAAIJ,WAAJ,EAAb,CADS,CACsB;AAClC;;AAEDK,0CAAyB;AAAE;AACvB,2BAAO,KAAKD,KAAL,CACFE,GADE,CACE,oBADF,EAEFC,IAFE,CAEGC,SACFA,MAAMC,GAAN,CAAUC,UAAU,IAAIT,UAAJ,CAAe,IAAIU,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CAApB,CAHD,EAKHC,OAAO;AACH;AACA,8BAAM,IAAIC,KAAJ,CAAW,wCAAX,CAAN;AACH,qBARE,CAAP;AASH;;AAEDC,mDAAkC;AAC9B,2BAAO,KAAKb,KAAL,CACFE,GADE,CACE,sBADF,EAEFC,IAFE,CAEGC,SACFA,MAAMC,GAAN,CAAUC,UAAU,IAAIT,UAAJ,CAAe,IAAIU,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CAApB,CAHD,EAKHC,OAAO;AACH,8BAAM,IAAIC,KAAJ,CAAU,2DAAV,CAAN;AACH,qBAPE,CAAP;AAQH;;AAEDE,oDAAmC;AAC/B,2BAAO,KAAKd,KAAL,CACFE,GADE,CACE,uBADF,EAEFC,IAFE,CAEGC,SACFA,MAAMC,GAAN,CAAUC,UAAU,IAAIT,UAAJ,CAAe,IAAIU,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CAApB,CAHD,EAKHC,OAAO;AACH,8BAAM,IAAIC,KAAJ,CAAU,4DAAV,CAAN;AACH,qBAPE,CAAP;AAQH;;AAEDG,4CAA2B;AAAE;AACzB,2BAAOC,QAAQC,GAAR,CAAY,CACf,KAAKhB,uBAAL,EADe,EAEf,KAAKY,gCAAL,EAFe,EAGf,KAAKC,iCAAL,EAHe,CAAZ,EAKNX,IALM,CAKDe,WAAWA,QACRC,MADQ,CACD,CAACC,SAAD,EAAYC,IAAZ,KAAqBD,UAAUE,MAAV,CAAiBD,IAAjB,CADpB,EAC4C,EAD5C,EAERE,IAFQ,CAEH,CAACC,CAAD,EAAGC,CAAH,KAASA,EAAEjB,IAAF,CAAOkB,OAAP,KAAmBF,EAAEhB,IAAF,CAAOkB,OAAP,EAFzB,CALV,EASFC,KATE,CASIhB,OAAO;AACViB,gCAAQC,GAAR,CAAYlB,GAAZ;AACA,8BAAM,IAAIC,KAAJ,CAAU,mDAAV,CAAN;AACH,qBAZE,CAAP;AAaH;;AAtD0B","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from \"../../util/HttpService.js\";\r\nimport { Negociacao } from \"./Negociacao.js\";\r\n\r\nexport class NegociacaoService {\r\n\r\n    constructor(){\r\n        this._http = new HttpService() //nova instância de HttpService como dependência\r\n    }\r\n\r\n    obtemNegociacaoDaSemana(){ //alterado pois a responsabilidade de lidar com XMLHttp foi passada para HttpService\r\n        return this._http\r\n            .get('negociacoes/semana')\r\n            .then(dados => \r\n                dados.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n            ,\r\n            err => {\r\n                //ATENÇÃO AQUI\r\n                throw new Error ('Não foi possível obter as negociações!')\r\n            })\r\n    }\r\n\r\n    obtemNegociacoesDaSemanaAnterior(){\r\n        return this._http\r\n            .get('negociacoes/anterior')\r\n            .then(dados =>\r\n                dados.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n            ,\r\n            err => {\r\n                throw new Error('Não foi possível obter as negociações da semana anterior!')\r\n            })\r\n    }\r\n\r\n    obtemNegociacoesDaSemanaRetrasada(){\r\n        return this._http\r\n            .get('negociacoes/retrasada')\r\n            .then(dados =>\r\n                dados.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n            ,\r\n            err => {\r\n                throw new Error('Não foi possível obter as negociações da semana retrasada!')\r\n            })\r\n    }\r\n\r\n    obtemNegociacoesDoPeriodo(){ //assume a responsabilidade de obter as negociações no servidor\r\n        return Promise.all([\r\n            this.obtemNegociacaoDaSemana(),\r\n            this.obtemNegociacoesDaSemanaAnterior(),\r\n            this.obtemNegociacoesDaSemanaRetrasada()\r\n        ])\r\n        .then(periodo => periodo\r\n                .reduce((novoArray, item) => novoArray.concat(item), [])\r\n                .sort((a,b) => b.data.getTime() - a.data.getTime())\r\n        )\r\n            .catch(err => {\r\n                console.log(err)\r\n                throw new Error('Não foi possível obter as negociações do período!')\r\n            })\r\n    }\r\n\r\n}"]}