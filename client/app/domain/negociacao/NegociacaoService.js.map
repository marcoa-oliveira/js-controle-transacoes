{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","ApplicationException","NegociacaoService","constructor","_http","obtemNegociacaoDaSemana","get","then","dados","map","objeto","Date","data","quantidade","valor","err","obtemNegociacoesDaSemanaAnterior","obtemNegociacoesDaSemanaRetrasada","obtemNegociacoesDoPeriodo","periodo","Promise","all","reduce","novoArray","item","concat","sort","a","b","getTime","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,uB,sBAAAA,W;;AACAC,sB,iBAAAA,U;;AACAC,gC,+BAAAA,oB;;;AAEF,kBAAMC,iBAAN,CAAwB;;AAE3BC,8BAAa;AACT,yBAAKC,KAAL,GAAa,IAAIL,WAAJ,EAAb,CADS,CACsB;AAClC;;AAEDM,0CAAyB;AAAE;AACvB,2BAAO,KAAKD,KAAL,CACFE,GADE,CACE,oBADF,EAEFC,IAFE,CAEGC,SACFA,MAAMC,GAAN,CAAUC,UAAU,IAAIV,UAAJ,CAAe,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CAApB,CAHD,EAKHC,OAAO;AACH;AACA;AACA,8BAAM,IAAId,oBAAJ,CAAyB,wCAAzB,CAAN;AACH,qBATE,CAAP;AAUH;;AAEDe,mDAAkC;AAC9B,2BAAO,KAAKZ,KAAL,CACFE,GADE,CACE,sBADF,EAEFC,IAFE,CAEGC,SACFA,MAAMC,GAAN,CAAUC,UAAU,IAAIV,UAAJ,CAAe,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CAApB,CAHD,EAKHC,OAAO;AACH;AACA,8BAAM,IAAId,oBAAJ,CAAyB,2DAAzB,CAAN;AACH,qBARE,CAAP;AASH;;AAEDgB,oDAAmC;AAC/B,2BAAO,KAAKb,KAAL,CACFE,GADE,CACE,uBADF,EAEFC,IAFE,CAEGC,SACFA,MAAMC,GAAN,CAAUC,UAAU,IAAIV,UAAJ,CAAe,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CAApB,CAHD,EAKHC,OAAO;AACH;AACA,8BAAM,IAAId,oBAAJ,CAAyB,4DAAzB,CAAN;AACH,qBARE,CAAP;AASH;;AAEKiB,yCAAN,GAAiC;AAAA;;AAAA;AAC7B,4BAAI;AACA,gCAAIC,UAAU,MAAMC,QAAQC,GAAR,CAAY,CAC5B,MAAKhB,uBAAL,EAD4B,EAE5B,MAAKW,gCAAL,EAF4B,EAG5B,MAAKC,iCAAL,EAH4B,CAAZ,CAApB;AAKA,mCAAOE,QACEG,MADF,CACS,UAACC,SAAD,EAAYC,IAAZ;AAAA,uCAAqBD,UAAUE,MAAV,CAAiBD,IAAjB,CAArB;AAAA,6BADT,EACqD,EADrD,EAEEE,IAFF,CAEO,UAACC,CAAD,EAAGC,CAAH;AAAA,uCAASA,EAAEhB,IAAF,CAAOiB,OAAP,KAAmBF,EAAEf,IAAF,CAAOiB,OAAP,EAA5B;AAAA,6BAFP,CAAP;AAGH,yBATD,CASE,OAAOd,GAAP,EAAY;AACVe,oCAAQC,GAAR,CAAYhB,GAAZ;AACA;AACA,kCAAM,IAAId,oBAAJ,CAAyB,mDAAzB,CAAN;AACH;AAd4B;AAehC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA1E2B","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from \"../../util/HttpService.js\";\r\nimport { Negociacao } from \"./Negociacao.js\";\r\nimport { ApplicationException } from \"../../util/ApplicationException.js\"\r\n\r\nexport class NegociacaoService {\r\n\r\n    constructor(){\r\n        this._http = new HttpService() //nova instância de HttpService como dependência\r\n    }\r\n\r\n    obtemNegociacaoDaSemana(){ //alterado pois a responsabilidade de lidar com XMLHttp foi passada para HttpService\r\n        return this._http\r\n            .get('negociacoes/semana')\r\n            .then(dados => \r\n                dados.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n            ,\r\n            err => {\r\n                //ATENÇÃO AQUI\r\n                //throw new Error ('Não foi possível obter as negociações!')\r\n                throw new ApplicationException('Não foi possível obter as negociações!')\r\n            })\r\n    }\r\n\r\n    obtemNegociacoesDaSemanaAnterior(){\r\n        return this._http\r\n            .get('negociacoes/anterior')\r\n            .then(dados =>\r\n                dados.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n            ,\r\n            err => {\r\n                //throw new Error('Não foi possível obter as negociações da semana anterior!')\r\n                throw new ApplicationException('Não foi possível obter as negociações da semana anterior!')\r\n            })\r\n    }\r\n\r\n    obtemNegociacoesDaSemanaRetrasada(){\r\n        return this._http\r\n            .get('negociacoes/retrasada')\r\n            .then(dados =>\r\n                dados.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n            ,\r\n            err => {\r\n                //throw new Error('Não foi possível obter as negociações da semana retrasada!')\r\n                throw new ApplicationException('Não foi possível obter as negociações da semana retrasada!')\r\n            })\r\n    }\r\n\r\n    async obtemNegociacoesDoPeriodo(){\r\n        try {\r\n            let periodo = await Promise.all([\r\n                this.obtemNegociacaoDaSemana(),\r\n                this.obtemNegociacoesDaSemanaAnterior(),\r\n                this.obtemNegociacoesDaSemanaRetrasada()\r\n            ])\r\n            return periodo\r\n                    .reduce((novoArray, item) => novoArray.concat(item),[])\r\n                    .sort((a,b) => b.data.getTime() - a.data.getTime())\r\n        } catch (err) {\r\n            console.log(err)\r\n            //throw new Error('Não foi possível obter as negociações do período!')\r\n            throw new ApplicationException('Não foi possível obter as negociações do período!')\r\n        }\r\n    }\r\n\r\n    // obtemNegociacoesDoPeriodo(){ //assume a responsabilidade de obter as negociações no servidor\r\n    //     return Promise.all([\r\n    //         this.obtemNegociacaoDaSemana(),\r\n    //         this.obtemNegociacoesDaSemanaAnterior(),\r\n    //         this.obtemNegociacoesDaSemanaRetrasada()\r\n    //     ])\r\n    //     .then(periodo => periodo\r\n    //             .reduce((novoArray, item) => novoArray.concat(item), [])\r\n    //             .sort((a,b) => b.data.getTime() - a.data.getTime())\r\n    //     )\r\n    //         .catch(err => {\r\n    //             console.log(err)\r\n    //             throw new Error('Não foi possível obter as negociações do período!')\r\n    //         })\r\n    // }\r\n\r\n}"]}