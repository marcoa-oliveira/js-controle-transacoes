{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","ApplicationException","NegociacaoService","constructor","_http","obtemNegociacaoDaSemana","get","then","dados","map","objeto","Date","data","quantidade","valor","err","obtemNegociacoesDaSemanaAnterior","obtemNegociacoesDaSemanaRetrasada","obtemNegociacoesDoPeriodo","periodo","Promise","all","reduce","novoArray","item","concat","sort","a","b","getTime","console","log"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,2BAA5B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,oBAAT,QAAqC,oCAArC;;AAEA,WAAaC,iBAAb,GAAO,MAAMA,iBAAN,CAAwB;;AAE3BC,kBAAa;AACT,aAAKC,KAAL,GAAa,IAAIL,WAAJ,EAAb,CADS,CACsB;AAClC;;AAEDM,8BAAyB;AAAE;AACvB,eAAO,KAAKD,KAAL,CACFE,GADE,CACE,0CADF,EAC8C;AAD9C,SAEFC,IAFE,CAEGC,SACFA,MAAMC,GAAN,CAAUC,UAAU,IAAIV,UAAJ,CAAe,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CAApB,CAHD,EAKHC,OAAO;AACH;AACA;AACA,kBAAM,IAAId,oBAAJ,CAAyB,wCAAzB,CAAN;AACH,SATE,CAAP;AAUH;;AAEDe,uCAAkC;AAC9B,eAAO,KAAKZ,KAAL,CACFE,GADE,CACE,4CADF,EAEFC,IAFE,CAEGC,SACFA,MAAMC,GAAN,CAAUC,UAAU,IAAIV,UAAJ,CAAe,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CAApB,CAHD,EAKHC,OAAO;AACH;AACA,kBAAM,IAAId,oBAAJ,CAAyB,2DAAzB,CAAN;AACH,SARE,CAAP;AASH;;AAEDgB,wCAAmC;AAC/B,eAAO,KAAKb,KAAL,CACFE,GADE,CACE,6CADF,EAEFC,IAFE,CAEGC,SACFA,MAAMC,GAAN,CAAUC,UAAU,IAAIV,UAAJ,CAAe,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CAApB,CAHD,EAKHC,OAAO;AACH;AACA,kBAAM,IAAId,oBAAJ,CAAyB,4DAAzB,CAAN;AACH,SARE,CAAP;AASH;;AAEKiB,6BAAN,GAAiC;AAAA;;AAAA;AAC7B,gBAAI;AACA,oBAAIC,UAAU,MAAMC,QAAQC,GAAR,CAAY,CAC5B,MAAKhB,uBAAL,EAD4B,EAE5B,MAAKW,gCAAL,EAF4B,EAG5B,MAAKC,iCAAL,EAH4B,CAAZ,CAApB;AAKA,uBAAOE,QACEG,MADF,CACS,UAACC,SAAD,EAAYC,IAAZ;AAAA,2BAAqBD,UAAUE,MAAV,CAAiBD,IAAjB,CAArB;AAAA,iBADT,EACqD,EADrD,EAEEE,IAFF,CAEO,UAACC,CAAD,EAAGC,CAAH;AAAA,2BAASA,EAAEhB,IAAF,CAAOiB,OAAP,KAAmBF,EAAEf,IAAF,CAAOiB,OAAP,EAA5B;AAAA,iBAFP,CAAP;AAGH,aATD,CASE,OAAOd,GAAP,EAAY;AACVe,wBAAQC,GAAR,CAAYhB,GAAZ;AACA;AACA,sBAAM,IAAId,oBAAJ,CAAyB,mDAAzB,CAAN;AACH;AAd4B;AAehC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA1E2B,CAA/B","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from \"../../util/HttpService.js\";\r\nimport { Negociacao } from \"./Negociacao.js\";\r\nimport { ApplicationException } from \"../../util/ApplicationException.js\"\r\n\r\nexport class NegociacaoService {\r\n\r\n    constructor(){\r\n        this._http = new HttpService() //nova instância de HttpService como dependência\r\n    }\r\n\r\n    obtemNegociacaoDaSemana(){ //alterado pois a responsabilidade de lidar com XMLHttp foi passada para HttpService\r\n        return this._http\r\n            .get('http://localhost:3000/negociacoes/semana') //http://localhost:3000/ alterado devido alterações no cap.20\r\n            .then(dados => \r\n                dados.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n            ,\r\n            err => {\r\n                //ATENÇÃO AQUI\r\n                //throw new Error ('Não foi possível obter as negociações!')\r\n                throw new ApplicationException('Não foi possível obter as negociações!')\r\n            })\r\n    }\r\n\r\n    obtemNegociacoesDaSemanaAnterior(){\r\n        return this._http\r\n            .get('http://localhost:3000/negociacoes/anterior')\r\n            .then(dados =>\r\n                dados.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n            ,\r\n            err => {\r\n                //throw new Error('Não foi possível obter as negociações da semana anterior!')\r\n                throw new ApplicationException('Não foi possível obter as negociações da semana anterior!')\r\n            })\r\n    }\r\n\r\n    obtemNegociacoesDaSemanaRetrasada(){\r\n        return this._http\r\n            .get('http://localhost:3000/negociacoes/retrasada')\r\n            .then(dados =>\r\n                dados.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n            ,\r\n            err => {\r\n                //throw new Error('Não foi possível obter as negociações da semana retrasada!')\r\n                throw new ApplicationException('Não foi possível obter as negociações da semana retrasada!')\r\n            })\r\n    }\r\n\r\n    async obtemNegociacoesDoPeriodo(){\r\n        try {\r\n            let periodo = await Promise.all([\r\n                this.obtemNegociacaoDaSemana(),\r\n                this.obtemNegociacoesDaSemanaAnterior(),\r\n                this.obtemNegociacoesDaSemanaRetrasada()\r\n            ])\r\n            return periodo\r\n                    .reduce((novoArray, item) => novoArray.concat(item),[])\r\n                    .sort((a,b) => b.data.getTime() - a.data.getTime())\r\n        } catch (err) {\r\n            console.log(err)\r\n            //throw new Error('Não foi possível obter as negociações do período!')\r\n            throw new ApplicationException('Não foi possível obter as negociações do período!')\r\n        }\r\n    }\r\n\r\n    // obtemNegociacoesDoPeriodo(){ //assume a responsabilidade de obter as negociações no servidor\r\n    //     return Promise.all([\r\n    //         this.obtemNegociacaoDaSemana(),\r\n    //         this.obtemNegociacoesDaSemanaAnterior(),\r\n    //         this.obtemNegociacoesDaSemanaRetrasada()\r\n    //     ])\r\n    //     .then(periodo => periodo\r\n    //             .reduce((novoArray, item) => novoArray.concat(item), [])\r\n    //             .sort((a,b) => b.data.getTime() - a.data.getTime())\r\n    //     )\r\n    //         .catch(err => {\r\n    //             console.log(err)\r\n    //             throw new Error('Não foi possível obter as negociações do período!')\r\n    //         })\r\n    // }\r\n\r\n}"]}