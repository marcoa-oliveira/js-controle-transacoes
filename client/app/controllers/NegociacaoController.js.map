{"version":3,"sources":["../../app-src/controllers/NegociacaoController.js"],"names":["Negociacoes","NegociacaoService","Negociacao","NegociacoesView","MensagemView","Mensagem","DataInvalidaException","DateConverter","getNegociacaoDao","Bind","NegociacaoController","constructor","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_negociacoes","_mensagem","_service","_init","adiciona","event","preventDefault","negociacao","_criaNegociacao","then","dao","texto","_limpaFormulario","catch","err","message","value","focus","paraData","parseInt","parseFloat","apaga","apagaTodos","esvazia","importaNegociacoes","obtemNegociacoesDoPeriodo","negociacoes","filter","novaNegociacao","paraArray","some","negociacaoExistente","equals","forEach","listaTodos"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import { Negociacoes, NegociacaoService, Negociacao } from '../domain/index.js'\r\nimport { NegociacoesView, MensagemView, Mensagem, DataInvalidaException, DateConverter } from '../ui/index.js'\r\nimport { getNegociacaoDao, Bind } from '../util/index.js'\r\n\r\nexport class NegociacaoController{\r\n\r\n    constructor(){\r\n        const $ = document.querySelector.bind(document)\r\n        this._inputData = $('#data')\r\n        this._inputQuantidade = $('#quantidade')\r\n        this._inputValor = $('#valor')\r\n\r\n        this._negociacoes = new Bind(\r\n            new Negociacoes(),\r\n            new NegociacoesView('#negociacoes'),\r\n            'adiciona', 'esvazia'\r\n        )\r\n\r\n        this._mensagem = new Bind(\r\n            new Mensagem(),\r\n            new MensagemView('#mensagemView'),\r\n            'texto'\r\n        )\r\n\r\n        this._service = new NegociacaoService()\r\n\r\n        this._init()\r\n    }\r\n\r\n    adiciona(event){\r\n\r\n        try {\r\n            event.preventDefault()\r\n            \r\n            // this._negociacoes.adiciona(this._criaNegociacao())\r\n            // this._mensagem.texto = 'Negociação adicionada com sucesso!'\r\n            // this._limpaFormulario()\r\n            // a inclusão na tabela e limpeza do form passam a depender da inclusão no banco ou não\r\n\r\n            const negociacao = this._criaNegociacao()\r\n\r\n            // DaoFactory\r\n            //     .getNegociacaoDao()\r\n            getNegociacaoDao()\r\n                .then(dao => dao.adiciona(negociacao))\r\n                .then(() => {\r\n                    //só inclui na tabela se conseguir incluir no banco antes\r\n                    this._negociacoes.adiciona(negociacao)\r\n                    this._mensagem.texto = 'Negociação adicionada com sucesso!'\r\n                    this._limpaFormulario()\r\n                })\r\n                .catch(err => this._mensagem.texto = err)\r\n\r\n        } catch (err) {            \r\n            if(err instanceof DataInvalidaException){ //testa se o erro é de data e exibe a msg ao usuário caso positivo\r\n                this._mensagem.texto = err.message\r\n            } else { //caso não seja um erro de data, exibe msg genérica\r\n                this._mensagem.texto = 'Um erro não esperado aconteceu. Entre em contato com o suporte'\r\n            }\r\n        }\r\n    }\r\n\r\n    _limpaFormulario(){\r\n        this._inputData.value = ''\r\n        this._inputQuantidade.value = 1\r\n        this._inputValor.value = 0.0\r\n        this._inputData.focus()\r\n    }\r\n\r\n    _criaNegociacao(){\r\n        return new Negociacao(\r\n            DateConverter.paraData(this._inputData.value),\r\n            parseInt(this._inputQuantidade.value),\r\n            parseFloat(this._inputValor.value)\r\n        )\r\n    }\r\n\r\n    apaga(){ \r\n        //método alterado para utilizar DaoFactory\r\n        // DaoFactory\r\n        //     .getNegociacaoDao()\r\n        getNegociacaoDao()\r\n            .then(dao => dao.apagaTodos())\r\n            .then(() => {\r\n                this._negociacoes.esvazia()\r\n                this._mensagem.texto = `Negociações apagadas com sucesso!`\r\n            })\r\n            .catch(err => this._mensagem.texto = err)\r\n    }\r\n\r\n    importaNegociacoes(){\r\n        \r\n        this._service  //agora importa utilizando o método obtemNegociacoesDoPeriodo() de negociacaoService.js\r\n            .obtemNegociacoesDoPeriodo()\r\n            .then(negociacoes => {\r\n                negociacoes\r\n                    .filter(novaNegociacao => \r\n                        !this._negociacoes.paraArray().some(negociacaoExistente => novaNegociacao.equals(negociacaoExistente)))\r\n                    .forEach(negociacao => this._negociacoes.adiciona(negociacao))\r\n                this._mensagem.texto = 'Negociacoes importadas com sucesso!'\r\n            })\r\n            .catch(err => this._mensagem.texto = err) \r\n    }\r\n\r\n    // _init(){\r\n    //     // DaoFactory //chamada do método listaTodos() de DaoFactory\r\n    //     //     .getNegociacaoDao()\r\n    //     getNegociacaoDao() //alterado devido mudança na declaração de DaoFactory\r\n    //         .then(dao => dao.listaTodos())\r\n    //         .then(negociacoes => \r\n    //             negociacoes.forEach(negociacao => this._negociacoes.adiciona(negociacao)))\r\n    //         .catch(err => this._mensagem.texto = err)\r\n    // }\r\n\r\n    _init() {\r\n\r\n        getNegociacaoDao()\r\n        .then(dao => dao.listaTodos())\r\n        .then(negociacoes => \r\n            negociacoes.forEach(negociacao => \r\n                this._negociacoes.adiciona(negociacao)))\r\n        .catch(err => this._mensagem.texto = err);\r\n    }\r\n\r\n\r\n}"]}