{"version":3,"sources":["../../app-src/controllers/NegociacaoController.js"],"names":["Negociacoes","NegociacaoService","Negociacao","NegociacoesView","MensagemView","Mensagem","DateConverter","getNegociacaoDao","Bind","getExceptionMessage","NegociacaoController","constructor","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_negociacoes","_mensagem","_service","_init","adiciona","event","preventDefault","negociacao","_criaNegociacao","dao","texto","_limpaFormulario","err","value","focus","paraData","parseInt","parseFloat","apaga","apagaTodos","esvazia","importaNegociacoes","negociacoes","obtemNegociacoesDoPeriodo","console","log","filter","paraArray","some","novaNegociacao","equals","negociacaoExistente","forEach","listaTodos"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import { Negociacoes, NegociacaoService, Negociacao} from '../domain/index.js'\r\nimport { NegociacoesView, MensagemView, Mensagem, DateConverter } from '../ui/index.js'\r\nimport { getNegociacaoDao, Bind, getExceptionMessage } from '../util/index.js'\r\n\r\nexport class NegociacaoController{\r\n\r\n    constructor(){\r\n        const $ = document.querySelector.bind(document)\r\n        this._inputData = $('#data')\r\n        this._inputQuantidade = $('#quantidade')\r\n        this._inputValor = $('#valor')\r\n\r\n        this._negociacoes = new Bind(\r\n            new Negociacoes(),\r\n            new NegociacoesView('#negociacoes'),\r\n            'adiciona', 'esvazia'\r\n        )\r\n\r\n        this._mensagem = new Bind(\r\n            new Mensagem(),\r\n            new MensagemView('#mensagemView'),\r\n            'texto'\r\n        )\r\n\r\n        this._service = new NegociacaoService()\r\n\r\n        this._init()\r\n    }\r\n\r\n    async adiciona(event){\r\n\r\n        try {\r\n            event.preventDefault()  \r\n            const negociacao = this._criaNegociacao()\r\n            \r\n            const dao = await getNegociacaoDao()\r\n            await dao.adiciona(negociacao)\r\n            this._negociacoes.adiciona(negociacao)\r\n            this._mensagem.texto = 'Negociação adicionada com sucesso!'\r\n\r\n            this._limpaFormulario()\r\n\r\n            // getNegociacaoDao()\r\n            //     .then(dao => dao.adiciona(negociacao))\r\n            //     .then(() => {\r\n            //         this._negociacoes.adiciona(negociacao)\r\n            //         this._mensagem.texto = 'Negociação adicionada com sucesso!'\r\n            //         this._limpaFormulario()\r\n            //     })\r\n            //     .catch(err => this._mensagem.texto = err)\r\n\r\n        } catch (err) {\r\n            //this._mensagem.texto = err.message\r\n            this._mensagem.texto = getExceptionMessage(err)\r\n\r\n            // if(err instanceof DataInvalidaException){ //testa se o erro é de data e exibe a msg ao usuário caso positivo\r\n            //     this._mensagem.texto = err.message\r\n            // } else { //caso não seja um erro de data, exibe msg genérica\r\n            //     this._mensagem.texto = 'Um erro não esperado aconteceu. Entre em contato com o suporte'\r\n            // }\r\n        }\r\n    }\r\n\r\n    _limpaFormulario(){\r\n        this._inputData.value = ''\r\n        this._inputQuantidade.value = 1\r\n        this._inputValor.value = 0.0\r\n        this._inputData.focus()\r\n    }\r\n\r\n    _criaNegociacao(){\r\n        return new Negociacao(\r\n            DateConverter.paraData(this._inputData.value),\r\n            parseInt(this._inputQuantidade.value),\r\n            parseFloat(this._inputValor.value)\r\n        )\r\n    }\r\n\r\n    async apaga(){\r\n        \r\n        try{\r\n            const dao = await getNegociacaoDao()\r\n            await dao.apagaTodos()\r\n            this._negociacoes.esvazia()\r\n            this._mensagem.texto = 'Negociações apagadas com sucesso!'\r\n        } catch (err){\r\n            //this._mensagem.texto = err.message\r\n            this._mensagem.texto = getExceptionMessage(err)\r\n        }\r\n        \r\n        // getNegociacaoDao()\r\n        //     .then(dao => dao.apagaTodos())\r\n        //     .then(() => {\r\n        //         this._negociacoes.esvazia()\r\n        //         this._mensagem.texto = `Negociações apagadas com sucesso!`\r\n        //     })\r\n        //     .catch(err => this._mensagem.texto = err)\r\n    }\r\n\r\n    async importaNegociacoes(){\r\n        try {\r\n            const negociacoes = await this._service.obtemNegociacoesDoPeriodo()\r\n            console.log(negociacoes)\r\n            negociacoes\r\n                .filter(novaNegociacao => \r\n                    !this._negociacoes.paraArray().some(negociacaoExistente => \r\n                        novaNegociacao.equals(negociacaoExistente)))\r\n                .forEach(negociacao => this._negociacoes.adiciona(negociacao))\r\n            this._mensagem.texto = 'Negociações do período importadas com sucesso!'    \r\n        } catch (err) {\r\n            //this._mensagem.texto = err.message\r\n            this._mensagem.texto = getExceptionMessage(err)\r\n        }\r\n    }\r\n\r\n    // importaNegociacoes(){\r\n        \r\n    //     this._service  \r\n    //         .obtemNegociacoesDoPeriodo()\r\n    //         .then(negociacoes => {\r\n    //             negociacoes\r\n    //                 .filter(novaNegociacao => \r\n    //                     !this._negociacoes.paraArray().some(negociacaoExistente => novaNegociacao.equals(negociacaoExistente)))\r\n    //                 .forEach(negociacao => this._negociacoes.adiciona(negociacao))\r\n    //             this._mensagem.texto = 'Negociacoes importadas com sucesso!'\r\n    //         })\r\n    //         .catch(err => this._mensagem.texto = err) \r\n    // }\r\n\r\n    async _init(){\r\n        try {\r\n            const dao = await getNegociacaoDao()\r\n            const negociacoes = await dao.listaTodos()\r\n            negociacoes.forEach(negociacao => this._negociacoes.adiciona(negociacao)) \r\n        } catch (err) {\r\n            //this._mensagem.texto = err.message //extrai apenas a msg de erro da exceção\r\n            this._mensagem.texto = getExceptionMessage(err)\r\n        }\r\n    }\r\n\r\n    //_init() {\r\n\r\n        //ALTERADO PARA UTILIZAR ASYNC/AWAIT - 18/03/21\r\n        // getNegociacaoDao()\r\n        // .then(dao => dao.listaTodos())\r\n        // .then(negociacoes => \r\n        //     negociacoes.forEach(negociacao => \r\n        //         this._negociacoes.adiciona(negociacao)))\r\n        // .catch(err => this._mensagem.texto = err);\r\n    //}\r\n\r\n\r\n}"]}