{"version":3,"sources":["../../../app-src/util/decorators/Debounce.js"],"names":["debounce","milissegundos","target","key","descriptor","metodoOriginal","value","timer","args","event","preventDefault","clearInterval","setTimeout","apply"],"mappings":";;;AAAO,aAASA,QAAT,CAAkBC,gBAAgB,GAAlC,EAAsC;AACzC,eAAO,UAAUC,MAAV,EAAkBC,GAAlB,EAAuBC,UAAvB,EAAkC;AACrC,kBAAMC,iBAAiBD,WAAWE,KAAlC,CADqC,CACG;;AAExC,gBAAIC,QAAQ,CAAZ;;AAEAH,uBAAWE,KAAX,GAAmB,UAAS,GAAGE,IAAZ,EAAiB;AAChC,oBAAGC,KAAH,EAAUA,MAAMC,cAAN;AACVC,8BAAcJ,KAAd;AACA;AACA;AACAA,wBAAQK,WAAW,MAAMP,eAAeQ,KAAf,CAAqB,IAArB,EAA2BL,IAA3B,CAAjB,EAAmDP,aAAnD,CAAR;AACH,aAND;;AAQA,mBAAOG,UAAP;AACH,SAdD;AAeH;;wBAhBeJ,Q","file":"Debounce.js","sourcesContent":["export function debounce(milissegundos = 500){\r\n    return function (target, key, descriptor){\r\n        const metodoOriginal = descriptor.value //referência para o método original\r\n        \r\n        let timer = 0\r\n\r\n        descriptor.value = function(...args){\r\n            if(event) event.preventDefault()\r\n            clearInterval(timer)\r\n            //aqui entra a implementação original do método que substituirá o original\r\n            //chama metodoOriginal após x milissegundos\r\n            timer = setTimeout(() => metodoOriginal.apply(this, args), milissegundos)\r\n        }\r\n        \r\n        return descriptor\r\n    }\r\n}"]}